#include <iostream>
#include <cstdlib> // umo¿liwia uzycie "atoi" - [funkcja] Konwertuje wartoœæ zapisan¹ w ³añcuchu 
				   // znaków do postaci liczby typu ca³kowitego (int).
				   // atoi obs³uguje tylko ma³e liczby - do 10 znaków. Przy wiêkszych siê wysypuje.
using namespace std;

int greatestNumber(char * c)
{
	char num1[5];
	char num2[5];
	int number = 0;
	
	for ( int x = 0; x < 5; x++ ) // okreœlenie dwóch pierwszych 5 cyfrowych liczb
	{
		num1[x] = c[x];
		num2[x] = c[x+1];
	}
	
	int number1 = atoi(num1);
	int number2 = atoi(num2);
	
	if ( number1 < number2 )
	{
		number1 = number2;  // numebr 1 ma byæ zawsze wiêksza
	}
	
	for ( int i = 1; c[i] != '\0'; i++ ) // porównywanie do siebie koljnych 5-cyfrowych liczb
	{
		for ( int x = 0; x < 5; x++ )
		{
			num2[x] = c[i+x];
		}
		
		number2 = atoi(num2);
		
		if ( number1 < number2 )
		{
			number1 = number2;
		}
	}
	
	number = number1;
	
	return number;
}

int main()
{
	char digits[] = "1740948824551711527614232216857618927954312334113874277931986502860248650900613893446066184963788291359840763615420973726016575412001460717777335998182660380125094783512016406189841439880877838371073496510996834849925533374380880681989722828907815861242586265392461821197629520039181953252586772294196982554912508393967997693576658254416163355328253618621462915036492934405963428875812574444429307787303825203729753432113253512226407034005310675004549564821683148492070607056738492657745798302236715540260611173004830129038857708930747837100834501456203566676771916272765139959265324442792373157858324115951064530891347463652810315522174823630352807225910850790534104859254139582796177190341753324129087456807743136301904293148205593287481435526892959450588013222703133709558378379391828018486093008763565839483976458615519645425326826639456253566144626825510151760024336282343436847398008805143639219823402319898913514253892870148193597980147555092824504405115908387269381033848015413735856908936069";
	int maxNumber = 0;

	maxNumber = greatestNumber(digits);
	cout << maxNumber; 
	
	cout << endl;
	system("pause");
	return 0;
}
